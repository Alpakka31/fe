#!/usr/bin/env python3
import sys, os, signal, time
from ftplib import FTP

try:
    from progressbar import AnimatedMarker, Bar, BouncingBar, Counter, ETA, \
    AdaptiveETA, FileTransferSpeed, FormatLabel, Percentage, \
    ProgressBar, ReverseBar, RotatingMarker, \
    SimpleProgress, Timer, UnknownLength
except ImportError:
    print("progressbar2 module is not installed")
    sys.exit(1)

try:
    import requests
    from requests import exceptions
except ImportError:
    print("requests module is not installed")
    sys.exit(1)

try:
    from tqdm import tqdm
except ImportError:
    print("tqdm module is not installed")
    sys.exit(1)

def handleInterrupt(signalNumber, frame):
    print("Download interrupted")
    sys.exit(1)

def fetch_file(url, destdir):
    filename = url.split('/')[-1]
    try:
        resp = requests.get(url, stream=True)
        resp.raise_for_status()
    except requests.exceptions.HTTPError as e:
        print(e)
        sys.exit(1)
    except requests.exceptions.RequestException as e:
        print("Error downloading file: " + e)
        sys.exit(1)

    length = int(resp.headers.get('content-length', 0))
    with open(destdir + "/" + filename, 'wb') as f, tqdm(
        desc=filename,
        total=length,
        unit='iB',
        unit_scale=True,
        unit_divisor=1024,
    ) as bar:
        for chunk in resp.iter_content(chunk_size=8192):
            size = f.write(chunk)
            bar.update(size)


def fetch_file_ftp(url, destdir):
    domain = url.split('/')[2]
    filename = url.split('/')[-1]
    try:
        ftp = FTP(domain)
    except ftplib.all_errors as e:
        print("FTP error: " + e)
        sys.exit(1)

    ftp.login('anonymous', 'anonymous')

    widgets = ['Downloading: ' + filename + ' ', Percentage(), ' ', Bar(marker='#', \
            left='[',right=']'), ' ', ETA(), ' ', FileTransferSpeed()]

    ftpFilepath = url.split('/')[3:-1]
    ftpFilepath = '/'.join(ftpFilepath)

    ftp.cwd(ftpFilepath)

    files = ftp.nlst()

    for file in files:
        if file == filename:
            ftp.sendcmd("TYPE i")
            size = ftp.size(file)
            
            global pbar
            pbar = ProgressBar(widgets = widgets, maxval = size)
            pbar.start()

            fetched_file = open(destdir + "/" + file, 'wb')
            
            def file_write(data):
                fetched_file.write(data)
                global pbar
                pbar += len(data)

            ftp.retrbinary('RETR ' + file, file_write)
            pbar.finish()
            fetched_file.close()

    ftp.quit()


def validate_url(url):
    if "http://" in url:
        return True
    elif "https://" in url:
        return True
    elif "ftp://" in url:
        return True
    else:
        return False

def isFTP(url):
    if "ftp://" in url:
        return True
    else:
        return False

def validate_destdir(destdir):
    if not os.path.isdir(destdir):
        os.makedirs(destdir, 0o755)

def main():
    if len(sys.argv) < 3:
        print("Not enough arguments... [url] [destdir]")
        sys.exit(1)
    elif len(sys.argv) > 3:
        print("Too many arguments. Only 2 needed.")
        sys.exit(1)
    else:
        isValid = validate_url(sys.argv[1])
        if isValid == True:
            validate_destdir(sys.argv[2])
            
            isFTPurl = isFTP(sys.argv[1])
            if isFTPurl == True:
                fetch_file_ftp(sys.argv[1], sys.argv[2])
            elif isFTPurl == False:
                fetch_file(sys.argv[1], sys.argv[2])
        elif isValid == False:
            print("URL validation failed.. Is it a real URL?")

if __name__ == "__main__":
    signal.signal(signal.SIGINT, handleInterrupt)
    main()
